1.基本概念
1）数据结构常和算法并论，事实上细致的数据结构可以带来更完美的算法。

2）引入:图书摆放
怎么摆放图书？怎么插入图书？怎么查找图书三种方案: 
随机摆放；按字母序号摆放->二分查找；按类别摆放->按类别和二分查找。

2.关于空间使用
1）例：PrintN函数
当N超过某一个数时，递归版本开始罢工，原来它把内存吃完了。
如果熟悉递归思想，可能递归更容易理解，但是先用内存通常较大。

3.关于算法效率
1）解决问题方法的效率，跟算法的巧妙程度有关

4.抽象数据类型
1）数据对象在计算机中的组织方式――相当于怎么放书的问题
2）数据对象必定与一系列加在其上的操作想关联，完成这些操作所用的方法就是算法
3）数据对象在计算机中的组织方式：
   逻辑结构：线性结构和树结构。
   物理存储结构：数组存还是链表存
4）抽象数据类型：
   抽象：描述数据类型的方法不依赖于具体实现
   数据对象集
   数据集合相关联的操作集：图书的摆放和操作是紧密结合在一起的！
（注：C语言中是分开的；面向对象语言是一起的：数据集和相关的操作集封装在一个类里面）
   抽象数据类型例子：矩阵（Matrix）